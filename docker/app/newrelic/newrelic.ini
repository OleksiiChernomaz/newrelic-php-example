extension = "newrelic.so"
[newrelic]
; Setting: newrelic.enabled
; Type   : boolean
; Scope  : per-directory
; Default: true
; Info   : Enable or disable the agent. Please note that you cannot globally
;          disable the agent and then selectively enable it on a per-directory
;          basis. If you disable the agent in the global INI file then the
;          agent will not initialize at all. However, you can selectively
;          disable the agent on a per-directory basis.
;
newrelic.enabled = ${NEWRELIC_ENABLED}

; Setting: newrelic.appname
; Type   : string
; Scope  : per-directory
; Default: "PHP Application"
; Info   : Sets the name of the application that metrics will be reported into.
;          This can in fact be a list of up to 3 application names, each of
;          which must be separated by a semi-colon. The first name in any such
;          list is considered the 'primary' application name and must be unique
;          for each account / license key.
;
newrelic.appname = "${NEWRELIC_APP_NAME}"

; Setting: newrelic.license
; Type   : string
; Scope  : per-directory
; Default: none
; Info   : Sets the New Relic license key to use. This can vary from directory
;          to directory if you are running a multi-tenant system. By special
;          dispensation if you upgraded from a previous version of the agent
;          where the license key was set in the daemon, the installation and
;          upgrade script will have preserved your license key from the file
;          /etc/newrelic/newrelic.cfg, but ONLY if you installed via rpm/yum
;          or dpkg. The key is saved in /etc/newrelic/upgrade_please.key
;          and the agent will look for that file if you do not specify a valid
;          license here.
;          It is *STRONGLY* recommended that you set the license key in your
;          INI file(s) and do not rely on the key file being present. Also
;          please note that even if you are not letting the agent start the
;          daemon and are still using newrelic.cfg (see below) the license
;          keyword in that file is no longer obeyed. Instead the agent will
;          use the preserved value of that license from the key file.
;          Once you have updated your INI files to contain the license we
;          urge you to remove /etc/newrelic/upgrade_please.key in order to
;          eliminate the potential for confusion about exactly where the key
;          is coming from.
;
newrelic.license = "${NEWRELIC_LICENSE}"

; Setting: newrelic.daemon.address (alias: newrelic.daemon.port)
; Type   : string or integer
; Scope  : system
; Default: /tmp/.newrelic.sock
; Info   : Sets how the agent and daemon communicate. How this is set can impact
;          performance.
;
;          The default is to use a UNIX-domain socket located at
;          /tmp/.newrelic.sock. If you want to use UNIX domain sockets then
;          this value must begin with a "/".
;
;          On Linux, an abstract socket can be created by prefixing the socket
;          name with '@'. Support for abstract sockets was added in PHP agent
;          version 5.2.
;
;          If you set this to an integer value in the range 1-65535, then this
;          will instruct the agent to use a normal TCP socket on the port
;          specified. This may be easier to use if you are using a chroot
;          environment.
;
;          To connect to a daemon that is running on a different host, set this
;          value to '<host>:<port>', where '<host>' denotes either a host name
;          or an IP address and '<port>' denotes a valid port number. IPv6 is
;          supported.
;
;          In order to use a TCP socket with a port in the range 1-1023,
;          the daemon must be started by the super-user. This is a fundamental
;          OS limitation and not one imposed by the daemon itself.
;
newrelic.daemon.address="${NEWRELIC_DAEMON_HOST}:13424"

; Setting: newrelic.loglevel
; Type   : string
; Scope  : system
; Default: "info"
; Info   : Sets the level of detail to include in the log file. You should
;          rarely need to change this from the default, and usually only under
;          the guidance of technical support.
;          Must be one of the following values:
;            always, error, warning, info, verbose, debug, verbosedebug
;
newrelic.loglevel = "debug"

; Setting: newrelic.daemon.loglevel
; Type   : string
; Scope  : system
; Default: "info"
; Info   : Sets the level of detail to include in the daemon log. You should
;          rarely need to change this from the default, and usually only under
;          the guidance of technical support.
;          Must be one of the following values:
;            always, error, warning, info, debug
;
;          The values verbose and verbosedebug are deprecated aliases for debug.
;
newrelic.daemon.loglevel = "debug"

; Setting: newrelic.logfile
; Type   : string
; Scope  : system
; Default: none
; Info   : Sets the name of the file to send log messages to.
;
newrelic.logfile = "/dev/stdout"

; Setting: newrelic.daemon.logfile
; Type   : string
; Scope  : system
; Default: none
; Info   : Sets the name of the file to send daemon log messages to.
;
newrelic.daemon.logfile = "/dev/stdout"

; Setting: newrelic.daemon.dont_launch
; Type   : integer (0, 1, 2 or 3)
; Scope  : system
; Default: 0
; Info   : If you prefer to have the daemon launched externally before the
;          agent starts up, set this variable to non-zero. The value you
;          choose determines exactly when the agent is allowed to start the
;          daemon:
;          0 - agent can start the daemon any time it needs to
;          1 - non-CLI (i.e Apache / php-fpm) agents can start the daemon
;          2 - only CLI agents can start the daemon
;          3 - the agent will never start the daemon
;
newrelic.daemon.dont_launch = 3

; Setting: newrelic.daemon.app_connect_timeout
; Type   : time specification string ("1s", "5m", etc)
; Scope  : system
; Default: 0
; Info   : Sets the maximum time the agent should wait for the daemon
;          connecting an application.  A value of 0 causes the agent to only
;          make one attempt at connecting to the daemon.  Allowed units are
;          "ns", "us", "ms", "s", "m", and "h".
;
;          With this timeout set, the agent will not immediately drop a
;          transaction when the daemon hasn't connected to the backend yet, but
;          rather grant the daemon time to establish the connection.
;
;          If setting a timeout, the recommended value is 10s.  It is
;          recommended to only set this timeout when instrumenting long-lived
;          background tasks, as in case of connection problems the agent will
;          block for the given timeout at every transaction start.
;
newrelic.daemon.app_connect_timeout = 20s